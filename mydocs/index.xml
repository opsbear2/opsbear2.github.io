<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mydocs on Welcome to Bear2&#39;s Secret Garden 💬🐻💬</title>
    <link>https://opsbear2.github.io/mydocs/</link>
    <description>Recent content in Mydocs on Welcome to Bear2&#39;s Secret Garden 💬🐻💬</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Aug 2022 18:26:38 +0800</lastBuildDate><atom:link href="https://opsbear2.github.io/mydocs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3.个性化Favicon</title>
      <link>https://opsbear2.github.io/mydocs/3.favicon/</link>
      <pubDate>Wed, 03 Aug 2022 18:26:38 +0800</pubDate>
      
      <guid>https://opsbear2.github.io/mydocs/3.favicon/</guid>
      <description>1 什么是favicon 2 自定义网站图标  2.1 定位网页的favicon文件 2.2 favicon的本地资源 2.3 生成你的favicon文件 2.4 推送新的网站图标        1 什么是favicon     Favicon是favorites icon的缩写，亦被称为website icon（网页图标）、page icon（页面图标）或urlicon（URL图标）。Favicon是与某个网站或网页相关联的图标
简单点就是它们
2 自定义网站图标     个人博客搭建好了，想拥有个性化的网站图标怎么办，你只需要替换下原有favicon的文件即可
2.1 定位网页的favicon文件     首先你需要知道你网站的favicon文件使用的格式，打开网页，F12进入开发者工具，找到Network，检索以favicon为前缀的资源文件，刷新网页重新请求资源，可以看到我的网站favicon文件是*.SVG格式，当然大部分网站的favicon都会采用这种格式，还有其他格式，比如*.ICO *.PNG等
2.2 favicon的本地资源     查看favicon文件的header信息，也可以看到网页图标其实就是请求这个URL
Request URL: https://opsbear2.com/favicon/favicon.svg 那么这个文件在哪里呢？进入网站的家目录find遍历资源，可以看到public和themes目录下都有文件，在搭建Hugo+Github Page 架构的网站时，我们知道是把public目录下的静态页资源推送到Github，所以网站图标其实请求的就是./public/favicon/favicon.svg这个文件，而themes目录下的favicon.svg是Hugo构建静态页所需要的资源。如果想自定义网站图标，只需要将themes目录下的favicon.svg替换，Hugo -D重新构静态页，将新的资源再推送Github就可以了
bear2 ~/git/blog find . -name &amp;#34;*favicon*&amp;#34; ./public/favicon .</description>
    </item>
    
    <item>
      <title>2.GPT图床搭建教程</title>
      <link>https://opsbear2.github.io/mydocs/2.imagesbed/</link>
      <pubDate>Mon, 01 Aug 2022 22:01:36 +0800</pubDate>
      
      <guid>https://opsbear2.github.io/mydocs/2.imagesbed/</guid>
      <description>1 项目介绍 2 Github创建仓库 3 安装PicGo 4 集成Typora      1 项目介绍     博客中的图片该如何存储，本文将介绍基于Github+PicGo+Typora搭建的免费图床，保姆级别的搭建教程如下
 Q1：什么是Github+PicGo+Typora？
  Github 是一个静态站点托管服务，直接将个人、组织或项目的页面托管于 GitHub 库或仓库 (repository) 中 PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具 Typora 是一款轻便简洁的Markdown编辑器，支持即时渲染是它最大的特色  2 Github创建仓库     Github的仓库可以作为存放博客图片的后端，比起共享存储、自建nginx站点等方式，它最大的特点是免费（白嫖
1.创建仓库，设置为公有访问
2.创建token，用于PicGo访问
【Settings】-&amp;gt;【Developer settings】-&amp;gt;【Personal access tokens】
点击创建新的token，至此Github配置到此结束
3 安装PicGo     1.下载PicGo
你可以从PicGo官网下载软件，或者从第三方软件源下载，例如
https://www.macat.vip/?cat=&amp;s=PicGo
更多安装方式见PicGo官方文档传输门🚪 PicGoDocs   2.配置PicGo
安装完成后，右侧点击【图床配置】，选择GitHub图床，填写以下信息
 1.</description>
    </item>
    
    <item>
      <title>1.基于Hugo&#43;Github搭建博客</title>
      <link>https://opsbear2.github.io/mydocs/1.blogquickstart/</link>
      <pubDate>Mon, 01 Aug 2022 17:36:58 +0800</pubDate>
      
      <guid>https://opsbear2.github.io/mydocs/1.blogquickstart/</guid>
      <description>1 项目介绍 2 GitHub环境准备 3 安装Hugo 4 将网站推送至Github 5 添加文章 6 网站加速      1 项目介绍     本文介绍如何使用GitHub Pages+Hugo搭建个人博客
 Q1：什么是 GitHub Pages+Hugo ？
  GitHub Pages 是一个静态站点托管服务，直接将个人、组织或项目的页面托管于 GitHub 库或仓库 (repository) 中 Hugo 是一个用 Go 语言编写的静态站点生成器，它针对速度、易用性和可配置性进行了优化，快速灵活  2 GitHub环境准备     在有GitHub账号的基础上，新建一个仓库，库名为${username}.github.io
 GitHub 仓库名必须为${username}.github.io，唯一值  3 安装Hugo     根据自己的操作系统，参考以下安装指南
MacOS   你的Mac已安装Homebrew的情况下，在终端执行  brew install hugo 安装完成后，检查版本  hugo version   Windows  https://gohugo.</description>
    </item>
    
  </channel>
</rss>
