[{"id":0,"href":"/openvpn/1.quickstart/","title":"1.openvpn部署文档","parent":"Openvpn","content":"   1 部署服务端  1.1 服务端环境准备 1.2 修改配置文件   2 部署客户端  2.1 客户端环境准备 2.2 连接服务端   3 其他配置  3.1 客户端提速 3.2 登录认证   4 脚本库  4.1 openvpn安装脚本 4.2 checkpsw认证        1 部署服务端     1.1 服务端环境准备     安装环境\n服务端 centos 7.2*1 10.17.0.10 客户端 centos 7.2*1 10.50.5.10 使用一键安装脚本，交互输入说明如下，执行过程中一直回车即可\nsh openvpn-install.sh \u0026gt;IP address: #脚本自动捕获 \u0026gt;Protocol [1-2]:1 #选择默认的udp协议 \u0026gt;Port: 1194 #默认端口 \u0026gt;DNS [1-5]: 1 #默认DNS \u0026gt;Client name: client #客户端配置文件名字,按需修改 脚本运行完，执行service iptables save查看nat转发规则\n# Generated by iptables-save v1.4.7 on Wed Oct 24 16:43:36 2018 *nat :PREROUTING ACCEPT [254:26292] :POSTROUTING ACCEPT [129:9143] :OUTPUT ACCEPT [129:9143] -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to-source 10.17.0.10 COMMIT 调整安全组和iptables，放行udp:1194\n1.2 修改配置文件     openvpn服务端配置文件/etc/openvpn/server.conf\n默认配置基础下添加 \u0026gt;duplicate-cn #允许多个客户端同时连接，为客户端分配不同的ip 服务端配置文件修改完，需要重启openvpn\nsystemctl restart openvpn@server.service openvpn客户端配置文件/root/client.ovpn\n默认配置基础下添加 \u0026gt;route-nopull \u0026gt;route 10.17.0.0 255.255.0.0 vpn_gateway #默认访问网络不走vpn隧道,下发该路由后访问目的网络会自动进入VPN隧道 至此服务端搭建完成\n2 部署客户端     2.1 客户端环境准备     yum安装openvpn和依赖包\nyum -y install epel-release yum -y install openvpn 添加配置文件和证书，将服务端/etc/openvpn目录下的ca.crt ta.key client.ovpn文件拷贝到客户端\n[root@bear2 /etc/openvpn]#tree .  . ├── client │ ├── ca.crt #服务端提供 │ └── ta.key #服务端提供 ├── server └── client.ovpn #服务端提供 2.2 连接服务端     openvpn --daemon --config /etc/openvpn/client.ovpn --log-append /var/log/openvpn.log 连接后ifconfig后有一个tun0的虚拟网口，查看route -n会有对应访问服务端的路由规则\nDestination Gateway Genmask Flags Metric Ref Use Iface 10.8.0.0 0.0.0.0 255.255.255.0 U 0 0 0 tun0 10.17.0.0 10.8.0.1 255.255.0.0 UG 0 0 0 tun0 3 其他配置     3.1 客户端提速     server和client配置文件添加以下参数（windows client不兼容该参数） 配置说明：（仅限 Linux）在 TUN/TAP 接口上设置 TX 队列长度。当前默认为 100\ntxqueuelen 1000 3.2 登录认证     服务端添加以下配置，checkpsw.sh见脚本库，给可执行权限\nchmod 755 checkpsw.sh\nauth-user-pass-verify /etc/openvpn/checkpsw.sh via-env client-cert-not-required username-as-common-name script-security 3 客户端添加以下配置\nauth-user-pass 4 脚本库     4.1 openvpn安装脚本     #!/bin/bash # # https://github.com/Nyr/openvpn-install # # Copyright (c) 2013 Nyr. Released under the MIT License. # Detect Debian users running the script with \u0026#34;sh\u0026#34; instead of bash if readlink /proc/$$/exe | grep -q \u0026#34;dash\u0026#34;; then echo \u0026#34;This script needs to be run with bash, not sh\u0026#34; exit fi if [[ \u0026#34;$EUID\u0026#34; -ne 0 ]]; then echo \u0026#34;Sorry, you need to run this as root\u0026#34; exit fi if [[ ! -e /dev/net/tun ]]; then echo \u0026#34;The TUN device is not available You need to enable TUN before running this script\u0026#34; exit fi if [[ -e /etc/debian_version ]]; then OS=debian GROUPNAME=nogroup RCLOCAL=\u0026#39;/etc/rc.local\u0026#39; elif [[ -e /etc/centos-release || -e /etc/redhat-release ]]; then OS=centos GROUPNAME=nobody RCLOCAL=\u0026#39;/etc/rc.d/rc.local\u0026#39; else echo \u0026#34;Looks like you aren\u0026#39;t running this installer on Debian, Ubuntu or CentOS\u0026#34; exit fi newclient () { # Generates the custom client.ovpn cp /etc/openvpn/client-common.txt ~/$1.ovpn echo \u0026#34;\u0026lt;ca\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn cat /etc/openvpn/easy-rsa/pki/ca.crt \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;/ca\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;cert\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn cat /etc/openvpn/easy-rsa/pki/issued/$1.crt \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;/cert\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;key\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn cat /etc/openvpn/easy-rsa/pki/private/$1.key \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;/key\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;tls-auth\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn cat /etc/openvpn/ta.key \u0026gt;\u0026gt; ~/$1.ovpn echo \u0026#34;\u0026lt;/tls-auth\u0026gt;\u0026#34; \u0026gt;\u0026gt; ~/$1.ovpn } if [[ -e /etc/openvpn/server.conf ]]; then while : do clear echo \u0026#34;Looks like OpenVPN is already installed.\u0026#34; echo echo \u0026#34;What do you want to do?\u0026#34; echo \u0026#34; 1) Add a new user\u0026#34; echo \u0026#34; 2) Revoke an existing user\u0026#34; echo \u0026#34; 3) Remove OpenVPN\u0026#34; echo \u0026#34; 4) Exit\u0026#34; read -p \u0026#34;Select an option [1-4]: \u0026#34; option case $option in 1) echo echo \u0026#34;Tell me a name for the client certificate.\u0026#34; echo \u0026#34;Please, use one word only, no special characters.\u0026#34; read -p \u0026#34;Client name: \u0026#34; -e CLIENT cd /etc/openvpn/easy-rsa/ EASYRSA_CERT_EXPIRE=3650 ./easyrsa build-client-full $CLIENT nopass # Generates the custom client.ovpn newclient \u0026#34;$CLIENT\u0026#34; echo echo \u0026#34;Client $CLIENTadded, configuration is available at:\u0026#34; ~/\u0026#34;$CLIENT.ovpn\u0026#34; exit ;; 2) # This option could be documented a bit better and maybe even be simplified # ...but what can I say, I want some sleep too NUMBEROFCLIENTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c \u0026#34;^V\u0026#34;) if [[ \u0026#34;$NUMBEROFCLIENTS\u0026#34; = \u0026#39;0\u0026#39; ]]; then echo echo \u0026#34;You have no existing clients!\u0026#34; exit fi echo echo \u0026#34;Select the existing client certificate you want to revoke:\u0026#34; tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep \u0026#34;^V\u0026#34; | cut -d \u0026#39;=\u0026#39; -f 2 | nl -s \u0026#39;) \u0026#39; if [[ \u0026#34;$NUMBEROFCLIENTS\u0026#34; = \u0026#39;1\u0026#39; ]]; then read -p \u0026#34;Select one client [1]: \u0026#34; CLIENTNUMBER else read -p \u0026#34;Select one client [1-$NUMBEROFCLIENTS]: \u0026#34; CLIENTNUMBER fi CLIENT=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep \u0026#34;^V\u0026#34; | cut -d \u0026#39;=\u0026#39; -f 2 | sed -n \u0026#34;$CLIENTNUMBER\u0026#34;p) echo read -p \u0026#34;Do you really want to revoke access for client $CLIENT? [y/N]: \u0026#34; -e REVOKE if [[ \u0026#34;$REVOKE\u0026#34; = \u0026#39;y\u0026#39; || \u0026#34;$REVOKE\u0026#34; = \u0026#39;Y\u0026#39; ]]; then cd /etc/openvpn/easy-rsa/ ./easyrsa --batch revoke $CLIENT EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl rm -f pki/reqs/$CLIENT.req rm -f pki/private/$CLIENT.key rm -f pki/issued/$CLIENT.crt rm -f /etc/openvpn/crl.pem cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem # CRL is read with each client connection, when OpenVPN is dropped to nobody chown nobody:$GROUPNAME /etc/openvpn/crl.pem echo echo \u0026#34;Certificate for client $CLIENTrevoked!\u0026#34; else echo echo \u0026#34;Certificate revocation for client $CLIENTaborted!\u0026#34; fi exit ;; 3) echo read -p \u0026#34;Do you really want to remove OpenVPN? [y/N]: \u0026#34; -e REMOVE if [[ \u0026#34;$REMOVE\u0026#34; = \u0026#39;y\u0026#39; || \u0026#34;$REMOVE\u0026#34; = \u0026#39;Y\u0026#39; ]]; then PORT=$(grep \u0026#39;^port \u0026#39; /etc/openvpn/server.conf | cut -d \u0026#34; \u0026#34; -f 2) PROTOCOL=$(grep \u0026#39;^proto \u0026#39; /etc/openvpn/server.conf | cut -d \u0026#34; \u0026#34; -f 2) if pgrep firewalld; then IP=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep \u0026#39;\\-s 10.8.0.0/24 \u0026#39;\u0026#34;\u0026#39;\u0026#34;\u0026#39;!\u0026#39;\u0026#34;\u0026#39;\u0026#34;\u0026#39; -d 10.8.0.0/24 -j SNAT --to \u0026#39; | cut -d \u0026#34; \u0026#34; -f 10) # Using both permanent and not permanent rules to avoid a firewalld reload. firewall-cmd --zone=public --remove-port=$PORT/$PROTOCOL firewall-cmd --zone=trusted --remove-source=10.8.0.0/24 firewall-cmd --permanent --zone=public --remove-port=$PORT/$PROTOCOL firewall-cmd --permanent --zone=trusted --remove-source=10.8.0.0/24 firewall-cmd --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP firewall-cmd --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP else IP=$(grep \u0026#39;iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to \u0026#39; $RCLOCAL | cut -d \u0026#34; \u0026#34; -f 14) iptables -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP sed -i \u0026#39;/iptables -t nat -A POSTROUTING -s 10.8.0.0\\/24 ! -d 10.8.0.0\\/24 -j SNAT --to /d\u0026#39; $RCLOCAL if iptables -L -n | grep -qE \u0026#39;^ACCEPT\u0026#39;; then iptables -D INPUT -p $PROTOCOL --dport $PORT -j ACCEPT iptables -D FORWARD -s 10.8.0.0/24 -j ACCEPT iptables -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT sed -i \u0026#34;/iptables -I INPUT -p $PROTOCOL--dport $PORT-j ACCEPT/d\u0026#34; $RCLOCAL sed -i \u0026#34;/iptables -I FORWARD -s 10.8.0.0\\/24 -j ACCEPT/d\u0026#34; $RCLOCAL sed -i \u0026#34;/iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT/d\u0026#34; $RCLOCAL fi fi if sestatus 2\u0026gt;/dev/null | grep \u0026#34;Current mode\u0026#34; | grep -q \u0026#34;enforcing\u0026#34; \u0026amp;\u0026amp; [[ \u0026#34;$PORT\u0026#34; != \u0026#39;1194\u0026#39; ]]; then semanage port -d -t openvpn_port_t -p $PROTOCOL $PORT fi if [[ \u0026#34;$OS\u0026#34; = \u0026#39;debian\u0026#39; ]]; then apt-get remove --purge -y openvpn else yum remove openvpn -y fi rm -rf /etc/openvpn rm -f /etc/sysctl.d/30-openvpn-forward.conf echo echo \u0026#34;OpenVPN removed!\u0026#34; else echo echo \u0026#34;Removal aborted!\u0026#34; fi exit ;; 4) exit;; esac done else clear echo \u0026#39;Welcome to this OpenVPN \u0026#34;road warrior\u0026#34; installer!\u0026#39; echo # OpenVPN setup and first user creation echo \u0026#34;I need to ask you a few questions before starting the setup.\u0026#34; echo \u0026#34;You can leave the default options and just press enter if you are ok with them.\u0026#34; echo echo \u0026#34;First, provide the IPv4 address of the network interface you want OpenVPN\u0026#34; echo \u0026#34;listening to.\u0026#34; # Autodetect IP address and pre-fill for the user IP=$(ip addr | grep \u0026#39;inet\u0026#39; | grep -v inet6 | grep -vE \u0026#39;127\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\u0026#39; | grep -oE \u0026#39;[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\u0026#39; | head -1) read -p \u0026#34;IP address: \u0026#34; -e -i $IP IP # If $IP is a private IP address, the server must be behind NAT if echo \u0026#34;$IP\u0026#34; | grep -qE \u0026#39;^(10\\.|172\\.1[6789]\\.|172\\.2[0-9]\\.|172\\.3[01]\\.|192\\.168)\u0026#39;; then echo echo \u0026#34;This server is behind NAT. What is the public IPv4 address or hostname?\u0026#34; read -p \u0026#34;Public IP address / hostname: \u0026#34; -e PUBLICIP fi echo echo \u0026#34;Which protocol do you want for OpenVPN connections?\u0026#34; echo \u0026#34; 1) UDP (recommended)\u0026#34; echo \u0026#34; 2) TCP\u0026#34; read -p \u0026#34;Protocol [1-2]: \u0026#34; -e -i 1 PROTOCOL case $PROTOCOL in 1) PROTOCOL=udp ;; 2) PROTOCOL=tcp ;; esac echo echo \u0026#34;What port do you want OpenVPN listening to?\u0026#34; read -p \u0026#34;Port: \u0026#34; -e -i 1194 PORT echo echo \u0026#34;Which DNS do you want to use with the VPN?\u0026#34; echo \u0026#34; 1) Current system resolvers\u0026#34; echo \u0026#34; 2) 1.1.1.1\u0026#34; echo \u0026#34; 3) Google\u0026#34; echo \u0026#34; 4) OpenDNS\u0026#34; echo \u0026#34; 5) Verisign\u0026#34; read -p \u0026#34;DNS [1-5]: \u0026#34; -e -i 1 DNS echo echo \u0026#34;Finally, tell me your name for the client certificate.\u0026#34; echo \u0026#34;Please, use one word only, no special characters.\u0026#34; read -p \u0026#34;Client name: \u0026#34; -e -i client CLIENT echo echo \u0026#34;Okay, that was all I needed. We are ready to set up your OpenVPN server now.\u0026#34; read -n1 -r -p \u0026#34;Press any key to continue...\u0026#34; if [[ \u0026#34;$OS\u0026#34; = \u0026#39;debian\u0026#39; ]]; then apt-get update apt-get install openvpn iptables openssl ca-certificates -y else # Else, the distro is CentOS yum install epel-release -y yum install openvpn iptables openssl ca-certificates -y fi # Get easy-rsa EASYRSAURL=\u0026#39;https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.5/EasyRSA-nix-3.0.5.tgz\u0026#39; wget -O ~/easyrsa.tgz \u0026#34;$EASYRSAURL\u0026#34; 2\u0026gt;/dev/null || curl -Lo ~/easyrsa.tgz \u0026#34;$EASYRSAURL\u0026#34; tar xzf ~/easyrsa.tgz -C ~/ mv ~/EasyRSA-3.0.5/ /etc/openvpn/ mv /etc/openvpn/EasyRSA-3.0.5/ /etc/openvpn/easy-rsa/ chown -R root:root /etc/openvpn/easy-rsa/ rm -f ~/easyrsa.tgz cd /etc/openvpn/easy-rsa/ # Create the PKI, set up the CA and the server and client certificates ./easyrsa init-pki ./easyrsa --batch build-ca nopass EASYRSA_CERT_EXPIRE=3650 ./easyrsa build-server-full server nopass EASYRSA_CERT_EXPIRE=3650 ./easyrsa build-client-full $CLIENT nopass EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl # Move the stuff we need cp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn # CRL is read with each client connection, when OpenVPN is dropped to nobody chown nobody:$GROUPNAME /etc/openvpn/crl.pem # Generate key for tls-auth openvpn --genkey --secret /etc/openvpn/ta.key # Create the DH parameters file using the predefined ffdhe2048 group echo \u0026#39;-----BEGIN DH PARAMETERS----- MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz +8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a 87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7 YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi 7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg== -----END DH PARAMETERS-----\u0026#39; \u0026gt; /etc/openvpn/dh.pem # Generate server.conf echo \u0026#34;port $PORTproto $PROTOCOLdev tun sndbuf 0 rcvbuf 0 ca ca.crt cert server.crt key server.key dh dh.pem auth SHA512 tls-auth ta.key 0 topology subnet server 10.8.0.0 255.255.255.0 ifconfig-pool-persist ipp.txt\u0026#34; \u0026gt; /etc/openvpn/server.conf echo \u0026#39;push \u0026#34;redirect-gateway def1 bypass-dhcp\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf # DNS case $DNS in 1) # Locate the proper resolv.conf # Needed for systems running systemd-resolved if grep -q \u0026#34;127.0.0.53\u0026#34; \u0026#34;/etc/resolv.conf\u0026#34;; then RESOLVCONF=\u0026#39;/run/systemd/resolve/resolv.conf\u0026#39; else RESOLVCONF=\u0026#39;/etc/resolv.conf\u0026#39; fi # Obtain the resolvers from resolv.conf and use them for OpenVPN grep -v \u0026#39;#\u0026#39; $RESOLVCONF | grep \u0026#39;nameserver\u0026#39; | grep -E -o \u0026#39;[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\u0026#39; | while read line; do echo \u0026#34;push \\\u0026#34;dhcp-option DNS $line\\\u0026#34;\u0026#34; \u0026gt;\u0026gt; /etc/openvpn/server.conf done ;; 2) echo \u0026#39;push \u0026#34;dhcp-option DNS 1.1.1.1\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf echo \u0026#39;push \u0026#34;dhcp-option DNS 1.0.0.1\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf ;; 3) echo \u0026#39;push \u0026#34;dhcp-option DNS 8.8.8.8\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf echo \u0026#39;push \u0026#34;dhcp-option DNS 8.8.4.4\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf ;; 4) echo \u0026#39;push \u0026#34;dhcp-option DNS 208.67.222.222\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf echo \u0026#39;push \u0026#34;dhcp-option DNS 208.67.220.220\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf ;; 5) echo \u0026#39;push \u0026#34;dhcp-option DNS 64.6.64.6\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf echo \u0026#39;push \u0026#34;dhcp-option DNS 64.6.65.6\u0026#34;\u0026#39; \u0026gt;\u0026gt; /etc/openvpn/server.conf ;; esac echo \u0026#34;keepalive 10 120 cipher AES-256-CBC user nobody group $GROUPNAMEpersist-key persist-tun status openvpn-status.log verb 3 crl-verify crl.pem\u0026#34; \u0026gt;\u0026gt; /etc/openvpn/server.conf # Enable net.ipv4.ip_forward for the system echo \u0026#39;net.ipv4.ip_forward=1\u0026#39; \u0026gt; /etc/sysctl.d/30-openvpn-forward.conf # Enable without waiting for a reboot or service restart echo 1 \u0026gt; /proc/sys/net/ipv4/ip_forward if pgrep firewalld; then # Using both permanent and not permanent rules to avoid a firewalld # reload. # We don\u0026#39;t use --add-service=openvpn because that would only work with # the default port and protocol. firewall-cmd --zone=public --add-port=$PORT/$PROTOCOL firewall-cmd --zone=trusted --add-source=10.8.0.0/24 firewall-cmd --permanent --zone=public --add-port=$PORT/$PROTOCOL firewall-cmd --permanent --zone=trusted --add-source=10.8.0.0/24 # Set NAT for the VPN subnet firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP firewall-cmd --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP else # Needed to use rc.local with some systemd distros if [[ \u0026#34;$OS\u0026#34; = \u0026#39;debian\u0026#39; \u0026amp;\u0026amp; ! -e $RCLOCAL ]]; then echo \u0026#39;#!/bin/sh -e exit 0\u0026#39; \u0026gt; $RCLOCAL fi chmod +x $RCLOCAL # Set NAT for the VPN subnet iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP sed -i \u0026#34;1 a\\iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP\u0026#34; $RCLOCAL if iptables -L -n | grep -qE \u0026#39;^(REJECT|DROP)\u0026#39;; then # If iptables has at least one REJECT rule, we asume this is needed. # Not the best approach but I can\u0026#39;t think of other and this shouldn\u0026#39;t # cause problems. iptables -I INPUT -p $PROTOCOL --dport $PORT -j ACCEPT iptables -I FORWARD -s 10.8.0.0/24 -j ACCEPT iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT sed -i \u0026#34;1 a\\iptables -I INPUT -p $PROTOCOL--dport $PORT-j ACCEPT\u0026#34; $RCLOCAL sed -i \u0026#34;1 a\\iptables -I FORWARD -s 10.8.0.0/24 -j ACCEPT\u0026#34; $RCLOCAL sed -i \u0026#34;1 a\\iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\u0026#34; $RCLOCAL fi fi # If SELinux is enabled and a custom port was selected, we need this if sestatus 2\u0026gt;/dev/null | grep \u0026#34;Current mode\u0026#34; | grep -q \u0026#34;enforcing\u0026#34; \u0026amp;\u0026amp; [[ \u0026#34;$PORT\u0026#34; != \u0026#39;1194\u0026#39; ]]; then # Install semanage if not already present if ! hash semanage 2\u0026gt;/dev/null; then yum install policycoreutils-python -y fi semanage port -a -t openvpn_port_t -p $PROTOCOL $PORT fi # And finally, restart OpenVPN if [[ \u0026#34;$OS\u0026#34; = \u0026#39;debian\u0026#39; ]]; then # Little hack to check for systemd if pgrep systemd-journal; then systemctl restart openvpn@server.service else /etc/init.d/openvpn restart fi else if pgrep systemd-journal; then systemctl restart openvpn@server.service systemctl enable openvpn@server.service else service openvpn restart chkconfig openvpn on fi fi # If the server is behind a NAT, use the correct IP address if [[ \u0026#34;$PUBLICIP\u0026#34; != \u0026#34;\u0026#34; ]]; then IP=$PUBLICIP fi # client-common.txt is created so we have a template to add further users later echo \u0026#34;client dev tun proto $PROTOCOLsndbuf 0 rcvbuf 0 remote $IP$PORTresolv-retry infinite nobind persist-key persist-tun remote-cert-tls server auth SHA512 cipher AES-256-CBC setenv opt block-outside-dns key-direction 1 verb 3\u0026#34; \u0026gt; /etc/openvpn/client-common.txt # Generates the custom client.ovpn newclient \u0026#34;$CLIENT\u0026#34; echo echo \u0026#34;Finished!\u0026#34; echo echo \u0026#34;Your client configuration is available at:\u0026#34; ~/\u0026#34;$CLIENT.ovpn\u0026#34; echo \u0026#34;If you want to add more clients, you simply need to run this script again!\u0026#34; fi 4.2 checkpsw认证     #!/bin/bash ########################################################### # checkpsw.sh (C) 2004 Mathias Sundman \u0026lt;mathias@openvpn.se\u0026gt; # # This script will authenticate OpenVPN users against # a plain text file. The passfile should simply contain # one row per user with the username first followed by # one or more space(s) or tab(s) and then the password. PASSFILE=\u0026#34;/etc/openvpn/psw-file\u0026#34; LOG_FILE=\u0026#34;/etc/openvpn/openvpn-password.log\u0026#34; TIME_STAMP=`date \u0026#34;+%Y-%m-%d %T\u0026#34;` ########################################################### if [ ! -r \u0026#34;${PASSFILE}\u0026#34; ]; then echo \u0026#34;${TIME_STAMP}: Could not open password file \\\u0026#34;${PASSFILE}\\\u0026#34; for reading.\u0026#34; \u0026gt;\u0026gt; ${LOG_FILE} exit 1 fi CORRECT_PASSWORD=`awk \u0026#39;!/^;/\u0026amp;\u0026amp;!/^#/\u0026amp;\u0026amp;$1==\u0026#34;\u0026#39;${username}\u0026#39;\u0026#34;{print $2;exit}\u0026#39; ${PASSFILE}` if [ \u0026#34;${CORRECT_PASSWORD}\u0026#34; = \u0026#34;\u0026#34; ]; then echo \u0026#34;${TIME_STAMP}: User does not exist: username=\\\u0026#34;${username}\\\u0026#34;, password=\\\u0026#34;${password}\\\u0026#34;.\u0026#34; \u0026gt;\u0026gt; ${LOG_FILE} exit 1 fi if [ \u0026#34;${password}\u0026#34; = \u0026#34;${CORRECT_PASSWORD}\u0026#34; ]; then echo \u0026#34;${TIME_STAMP}: Successful authentication: username=\\\u0026#34;${username}\\\u0026#34;.\u0026#34; \u0026gt;\u0026gt; ${LOG_FILE} exit 0 fi echo \u0026#34;${TIME_STAMP}: Incorrect password: username=\\\u0026#34;${username}\\\u0026#34;, password=\\\u0026#34;${password}\\\u0026#34;.\u0026#34; \u0026gt;\u0026gt; ${LOG_FILE} exit 1 "},{"id":1,"href":"/","title":"Geekdocs","parent":"","content":""},{"id":2,"href":"/openvpn/","title":"Openvpn","parent":"Geekdocs","content":"OpenVPN is an open source VPN daemon by James Yonan. Because OpenVPN tries to be a universal VPN tool offering a great deal of flexibility, there are a lot of options on this manual page. If you\u0026rsquo;re new to OpenVPN, you might want to skip ahead to the examples section where you will see how to construct simple VPNs on the command line without even needing a configuration file.\nAlso note that there\u0026rsquo;s more documentation and examples on the OpenVPN web site: https://openvpn.net/\nAnd if you would like to see a shorter version of this manual, see the openvpn usage message which can be obtained by running openvpn without any parameters.\n"},{"id":3,"href":"/frontpage/8.images/","title":"8.图片","parent":"Frontpage","content":"插入图片，可以是本地图片，也可以外部图片\n用法     ![imagesname](url) 例子     熊小二在看雪\n"},{"id":4,"href":"/frontpage/","title":"Frontpage","parent":"Geekdocs","content":"介绍geekdocs下markdown的语法\n"},{"id":5,"href":"/frontpage/7.icons/","title":"7.图标","parent":"Frontpage","content":"引用图标，这些图标可以是geekdocs自带的，当然你也可以自定义，但必须是SVG格式\n{{\u0026lt; icon \u0026#34;thumbs-up\u0026#34; \u0026gt;}}用法        Result Usage      {{\u0026lt; icon \u0026quot;thumbs-up\u0026quot; \u0026gt;}}    {{\u0026lt; icon \u0026quot;thumbs-down\u0026quot; \u0026gt;}}    {{\u0026lt; icon \u0026quot;laugh\u0026quot; \u0026gt;}}    {{\u0026lt; icon \u0026quot;lemon\u0026quot; \u0026gt;}}    {{\u0026lt; icon \u0026quot;moon\u0026quot; \u0026gt;}}    "},{"id":6,"href":"/frontpage/6.buttons/","title":"6.按钮","parent":"Frontpage","content":"点击按钮可以指向本地页面或者外部链接，\n{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;, size=\u0026#34;large|regular\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}}{{\u0026lt; button href=\u0026#34;https://www.bilibili.com\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}例子      Get Home   B站传送门   "},{"id":7,"href":"/frontpage/5.columns/","title":"5.多列","parent":"Frontpage","content":"并排（水平）组织内容以提高可读性\n属性        Name Description default     size (optional) size of the first column (small|regular|large) regular    用法     {{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; ## Left Content 至若春和景明，波澜不惊，上下天光，一碧万顷 ... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ## Mid Content 至若春和景明，波澜不惊，上下天光，一碧万顷 ... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ## Right Content 至若春和景明，波澜不惊，上下天光，一碧万顷 ... {{\u0026lt; /columns \u0026gt;}} 例子     左     庆历四年春，滕子京谪守巴陵郡。越明年，政通人和，百废具兴，乃重修岳阳楼，增其旧制，刻唐贤今人诗赋于其上，属予作文以记之。\n予观夫巴陵胜状，在洞庭一湖。衔远山，吞长江，浩浩汤汤，横无际涯，朝晖夕阴，气象万千，此则岳阳楼之大观也，前人之述备矣。然则北通巫峡，南极潇湘，迁客骚人，多会于此，览物之情，得无异乎？\n 中     若夫淫雨霏霏，连月不开，阴风怒号，浊浪排空，日星隐曜，山岳潜形，商旅不行，樯倾楫摧，薄暮冥冥，虎啸猿啼。登斯楼也，则有去国怀乡，忧谗畏讥，满目萧然，感极而悲者矣，至若春和景明，波澜不惊，上下天光，一碧万顷，沙鸥翔集，锦鳞游泳，岸芷汀兰，郁郁青青。而或长烟一空，皓月千里，浮光跃金，静影沉璧，渔歌互答，此乐何极！登斯楼也，则有心旷神怡，宠辱偕忘，把酒临风，其喜洋洋者矣。  右     嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲，居庙堂之高则忧其民，处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎！噫！微斯人，吾谁与归？\n时六年九月十五日。\n  "},{"id":8,"href":"/frontpage/4.expand/","title":"4.隐藏","parent":"Frontpage","content":"通过隐藏部分文本来帮助减少屏幕上的混乱，通过单击展开内容\n例子     默认     {{\u0026lt; expand \u0026gt;}}## 内容 嗟夫！予尝求古仁人之心，或异二者之为 ... {{\u0026lt; /expand \u0026gt;}}Expand ↕  内容     嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲，居庙堂之高则忧其民，处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎！噫！微斯人，吾谁与归？   自定义标签     {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}}## 内容 嗟夫！予尝求古仁人之心，或异二者之为 ... {{\u0026lt; /expand \u0026gt;}}点击查看原文 ...  原文     庆历四年春，滕子京谪守巴陵郡。越明年，政通人和，百废具兴，乃重修岳阳楼，增其旧制，刻唐贤今人诗赋于其上，属予作文以记之。\n予观夫巴陵胜状，在洞庭一湖。衔远山，吞长江，浩浩汤汤，横无际涯，朝晖夕阴，气象万千，此则岳阳楼之大观也，前人之述备矣。然则北通巫峡，南极潇湘，迁客骚人，多会于此，览物之情，得无异乎？\n若夫淫雨霏霏，连月不开，阴风怒号，浊浪排空，日星隐曜，山岳潜形，商旅不行，樯倾楫摧，薄暮冥冥，虎啸猿啼。登斯楼也，则有去国怀乡，忧谗畏讥，满目萧然，感极而悲者矣。\n至若春和景明，波澜不惊，上下天光，一碧万顷，沙鸥翔集，锦鳞游泳，岸芷汀兰，郁郁青青。而或长烟一空，皓月千里，浮光跃金，静影沉璧，渔歌互答，此乐何极！登斯楼也，则有心旷神怡，宠辱偕忘，把酒临风，其喜洋洋者矣。\n嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲，居庙堂之高则忧其民，处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎！噫！微斯人，吾谁与归？\n时六年九月十五日\n  "},{"id":9,"href":"/frontpage/3.hints/","title":"3.提示","parent":"Frontpage","content":"设定不同的提示，种类包括提示/警报/通知\n属性        Name Description default     type hint type note   icon (optional) custom icon to use,need to be an icon from an SVG sprite undefined   title (optional) hint title undefined    用法     {{\u0026lt; hint type=[note|tip|important|caution|warning] (icon=gdoc_github) (title=GitHub) \u0026gt;}}先天下之忧而忧，后天下之乐而乐 {{\u0026lt; /hint \u0026gt;}}例子      内容\n先天下之忧而忧，后天下之乐而乐   内容\n先天下之忧而忧，后天下之乐而乐   内容\n先天下之忧而忧，后天下之乐而乐   内容\n先天下之忧而忧，后天下之乐而乐   内容\n先天下之忧而忧，后天下之乐而乐  使用自定义的icon图标{{\u0026lt; hint type=note icon=gdoc_github title=GitHub \u0026gt;}}\n GitHub 内容\n先天下之忧而忧，后天下之乐而乐  "},{"id":10,"href":"/frontpage/2.tags/","title":"2.标签","parent":"Frontpage","content":"选项卡可让您按上下文组织内容，例如不同语言版本的《岳阳楼记》\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}}{{\u0026lt; tab \u0026#34;简体中文\u0026#34; \u0026gt;}}# 《岳阳楼记》 {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; tab \u0026#34;英语\u0026#34; \u0026gt;}}# 《The Story of Yueyang Tower》 {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; tab \u0026#34;法语\u0026#34; \u0026gt;}}# 《L\u0026#39;histoire de la tour Yueyang》 {{\u0026lt; /tab \u0026gt;}}{{\u0026lt; /tabs \u0026gt;}}例子     简体中文  《岳阳楼记》     庆历四年春，滕子京谪守巴陵郡。越明年，政通人和，百废具兴，乃重修岳阳楼，增其旧制，刻唐贤今人诗赋于其上，属予作文以记之。\n予观夫巴陵胜状，在洞庭一湖。衔远山，吞长江，浩浩汤汤，横无际涯，朝晖夕阴，气象万千，此则岳阳楼之大观也，前人之述备矣。然则北通巫峡，南极潇湘，迁客骚人，多会于此，览物之情，得无异乎？\n若夫淫雨霏霏，连月不开，阴风怒号，浊浪排空，日星隐曜，山岳潜形，商旅不行，樯倾楫摧，薄暮冥冥，虎啸猿啼。登斯楼也，则有去国怀乡，忧谗畏讥，满目萧然，感极而悲者矣。\n至若春和景明，波澜不惊，上下天光，一碧万顷，沙鸥翔集，锦鳞游泳，岸芷汀兰，郁郁青青。而或长烟一空，皓月千里，浮光跃金，静影沉璧，渔歌互答，此乐何极！登斯楼也，则有心旷神怡，宠辱偕忘，把酒临风，其喜洋洋者矣。\n嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲，居庙堂之高则忧其民，处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎！噫！微斯人，吾谁与归？\n时六年九月十五日\n 英语  《The Story of Yueyang Tower》     In the spring of the fourth year of Qingli, Teng Zijing was exiled to guard Baling County. In the next year, the government will be harmonious, and the waste will be prosperous, so the Yueyang Tower will be rebuilt, the old system will be added, and the poems of Tang Xianjinren will be engraved on it, which belongs to the composition to remember.\nI watched the victorious state of my husband Baling, in a lake in Dongting. The title of distant mountains, swallowing the Yangtze River, the vast soup and soup, the boundless horizon, the dawn and the sunset, the weather is myriad, this is the grand view of Yueyang Tower, and the predecessors have prepared it. However, Wu Gorge in the north, Xiaoxiang in the Antarctic, and people who moved to the west would often come here.\nIf the husband is promiscuous, the rain is falling, the months are not open, the wind is roaring, the turbid waves are emptying, the sun and stars are hidden, the mountains are hidden, the business travel is not possible, the trees are devastated, the twilight is dark, and the tigers are roaring. In Dengsilou, there are those who go to the country and nostalgic, worry about slander and fear of ridicule, and their eyes are full of sadness.\nUntil Ruochun and Jingming, the waves are calm, the sky is bright, the sky is full of blue, the sea gulls are gathering, the golden scales are swimming, the shore is full of green and green. Or the long smoke is empty, the bright moon is a thousand miles away, the floating light leaps to gold, the still shadow sinks into the jade, the fisherman\u0026rsquo;s song answers each other, what a joy! Dengsilou also, there are those who are relaxed and happy, forget the favor and humiliation, and drink wine in the wind, and they are full of joy.\nOuch! I have tried to seek the heart of ancient benevolent people, or to act differently from the two, what is it? Don\u0026rsquo;t be happy with things, don\u0026rsquo;t be sad about yourself, you are worried about the people when you live in a temple, and you are worried about your ruler when you live far away from the rivers and lakes. It is worrying about advancing and worrying about retreating. But when will you be happy? It must be said, \u0026ldquo;The worry of the world first, the worry of the world, and the joy of the world\u0026rdquo;! Alas! Micro man, who I go?\nSeptember 15, six years\n 法语  《L\u0026rsquo;histoire de la tour Yueyang》     Au printemps de la quatrième année de Qingli, Teng Zijing fut exilé pour garder le comté de Baling. L\u0026rsquo;année prochaine, le gouvernement sera harmonieux et les déchets seront prospères. La tour Yueyang sera donc reconstruite, l\u0026rsquo;ancien système sera ajouté et les poèmes de Tang Xianjinren y seront gravés, ce qui appartient à la composition. se souvenir.\nJ\u0026rsquo;ai observé l\u0026rsquo;état victorieux de mon mari Baling, dans un lac à Dongting. Le titre des montagnes lointaines, avalant le fleuve Yangtze, la vaste soupe et soupe, l\u0026rsquo;horizon sans limites, le soleil du matin et le coucher du soleil, le temps est myriade, c\u0026rsquo;est la vue grandiose de la tour Yueyang, et les prédécesseurs l\u0026rsquo;ont préparée. Cependant, les gorges de Wu au nord, Xiaoxiang dans l\u0026rsquo;Antarctique et les personnes qui se sont déplacées vers l\u0026rsquo;ouest venaient souvent ici.\nSi le mari est promiscuité, la pluie tombe, les mois ne sont pas ouverts, le vent gronde, les vagues troubles se vident, le soleil et les étoiles sont cachés, les montagnes sont cachées, les voyages d\u0026rsquo;affaires ne sont pas possibles, les arbres sont dévasté, le crépuscule est sombre et les tigres rugissent. A Dengsilou, il y a ceux qui vont à la campagne et qui sont nostalgiques, s\u0026rsquo;inquiètent de la calomnie et ont peur du ridicule, et leurs yeux sont pleins de tristesse.\nJusqu\u0026rsquo;à Ruochun et Jingming, les vagues sont calmes, le ciel est lumineux, le ciel est plein de bleu, les mouettes se rassemblent, les écailles dorées nagent, le rivage est plein de vert et de vert. Ou la longue fumée est vide, la lune brillante est à des milliers de kilomètres, la lumière flottante bondit vers l\u0026rsquo;or, l\u0026rsquo;ombre immobile s\u0026rsquo;enfonce dans le jade, la chanson du pêcheur se répond, quelle joie ! Dengsilou aussi, il y a ceux qui sont détendus et heureux, oublient la faveur et l\u0026rsquo;humiliation, et boivent du vin dans le vent, et ils sont pleins de joie.\nAie! J\u0026rsquo;ai essayé de chercher le cœur d\u0026rsquo;anciens gens bienveillants, ou d\u0026rsquo;agir différemment des deux, qu\u0026rsquo;est-ce que c\u0026rsquo;est ? Ne sois pas content des choses, ne sois pas triste pour toi-même, tu t\u0026rsquo;inquiètes pour les gens quand tu vis dans un temple, et tu t\u0026rsquo;inquiètes pour ton dirigeant quand tu vis loin des rivières et des lacs. C\u0026rsquo;est s\u0026rsquo;inquiéter d\u0026rsquo;avancer et s\u0026rsquo;inquiéter de reculer. Mais quand serez-vous heureux ? Il faut dire : « L\u0026rsquo;inquiétude du monde d\u0026rsquo;abord, l\u0026rsquo;inquiétude du monde, et la joie du monde » ! Hélas! Micro homme, qui je vais?\n15 septembre, six ans\n  "},{"id":11,"href":"/golang/1.foreword/","title":"1.foreword","parent":"Golang","content":""},{"id":12,"href":"/kubernetes/1.foreword/","title":"1.foreword","parent":"Kubernetes","content":""},{"id":13,"href":"/golang/","title":"Golang","parent":"Geekdocs","content":"The Go programming language is an open source project to make programmers more productive.\nGo is expressive, concise, clean, and efficient. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It\u0026rsquo;s a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language.\n"},{"id":14,"href":"/kubernetes/","title":"Kubernetes","parent":"Geekdocs","content":"This page is an overview of Kubernetes.\nKubernetes is a portable, extensible, open source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available.\nThe name Kubernetes originates from Greek, meaning helmsman or pilot. K8s as an abbreviation results from counting the eight letters between the \u0026ldquo;K\u0026rdquo; and the \u0026ldquo;s\u0026rdquo;. Google open-sourced the Kubernetes project in 2014. Kubernetes combines over 15 years of Google\u0026rsquo;s experience running production workloads at scale with best-of-breed ideas and practices from the community.\n"},{"id":15,"href":"/python/1.foreword/","title":"1.foreword","parent":"Python","content":""},{"id":16,"href":"/python/","title":"Python","parent":"Geekdocs","content":"Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python’s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.\nThe Python interpreter and the extensive standard library are freely available in source or binary form for all major platforms from the Python web site, https://www.python.org/, and may be freely distributed. The same site also contains distributions of and pointers to many free third party Python modules, programs and tools, and additional documentation.\nThe Python interpreter is easily extended with new functions and data types implemented in C or C++ (or other languages callable from C). Python is also suitable as an extension language for customizable applications.\n"},{"id":17,"href":"/frontpage/1.toc/","title":"1.目录","parent":"Frontpage","content":"生成页面目录toc\n用法:\n{{\u0026lt; toc \u0026gt;}}例子:\n   标题 1 标题 2  标题 2.1  标题 2.1.1  标题 2.1.1.1     标题 2.2        标题 1     HelloWrold\n标题 2     HelloWrold\n标题 2.1     HelloWrold\n标题 2.1.1     HelloWrold\n标题 2.1.1.1     HelloWrold\n标题 2.2     HelloWrold\n"},{"id":18,"href":"/tags/","title":"Tags","parent":"Geekdocs","content":""}]